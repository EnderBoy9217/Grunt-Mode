untyped
global function DropPodSpawn1Player_Init
global function SpawnPlayerInDropPod

struct {
	array< entity > droppods
} file

void function DropPodSpawn1Player_Init()
{
	#if SERVER
	//AddCallback_OnRoundEndCleanup( CleanupSpawningDropPods )
	#endif
}

void function CleanupSpawningDropPods()
{
	#if SERVER
	foreach ( entity pod in file.droppods )
		pod.Destroy()
	
	file.droppods.clear()
	#endif
}

void function SpawnPlayerInDropPod( entity player, vector targetOrigin, vector angles, float destructionTime = -1 )
{
	#if SERVER
	if( IsValid( player ) )
	{
		entity pod = CreateDropPod( targetOrigin, angles )
		
		file.droppods.append( pod )
		svGlobal.levelEnt.EndSignal( "CleanUpEntitiesForRoundEnd" )
		
		// TODO: we need to make a door for this, CreateDropPodDoor in _droppod_fireteam is just busted for some reason tho
		
		entity camera = CreateEntity( "point_viewcontrol" )
		vector podloaction = pod.GetOrigin() + Vector( 0, 0, 3000 )
		camera.SetLocalOrigin( podloaction )
		camera.SetAngles( < 90, -180, 0 > )
		
		if ( !IsAlive( player ) )
			player.RespawnPlayer( null )

		if( IsValid( pod ) )
		{
			player.SetOrigin( pod.GetOrigin() )
			player.SetAngles( pod.GetAngles() )
			player.SetParent( pod )
		}

		if( IsValid( player ) )
		{
			player.FreezeControlsOnServer()
			AddCinematicFlag( player, CE_FLAG_HIDE_MAIN_HUD )
			player.SetViewEntity( camera, true )
		}
		
		// wait for this
		LaunchAnimDropPod( pod, "pod_testpath", targetOrigin, angles )
		
		//WaitFrame()
		if( IsValid( player ) && GamePlaying() )
		{
			player.ClearParent()
			player.ClearViewEntity()
			player.UnfreezeControlsOnServer()
			RemoveCinematicFlag( player, CE_FLAG_HIDE_MAIN_HUD )
		}
		
		/*
		// wait a frame, otherwise this won't properly work
		WaitFrame()
		vector doorPos = pod.GetAttachmentOrigin( pod.LookupAttachment( "hatch" ) )
		
		if( IsValid(player) )
		{
			vector viewAngles = doorPos - player.GetOrigin()
			viewAngles.x = 3.0
			
			player.SetAngles( viewAngles )
		}
		*/

		if ( destructionTime != -1 && GamePlaying() )
		{
			wait destructionTime
			pod.Dissolve( ENTITY_DISSOLVE_NORMAL, < 0, 0, 0 >, 0 )
			
			file.droppods.remove( file.droppods.find( pod ) )
		}
	}
	#endif
}